<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Diary of madman</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2015-10-29T18:10:05+03:00</updated>
<id>/</id>
<author>
  <name>Антон Рябов</name>
  <uri>/</uri>
  <email>mail@doam.ru</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Понимание методов Enumerable методом реализации их на Ruby]]></title>
  <link rel="alternate" type="text/html" href="/understanding_enumerable_methods_by_re-implementing_them_in_ruby/" />
  <id>/understanding_enumerable_methods_by_re-implementing_them_in_ruby</id>
  <published>2015-10-21T17:26:45+03:00</published>
  <updated>2015-10-21T17:26:45+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;a href=&quot;http://ruby-doc.org/core-2.2.3/Enumerable.html&quot; target=&quot;_blank&quot;&gt;Enumerable&lt;/a&gt; в Руби является, безусловно, одним из самых лучших примеров как нужно делать модули. Он предоставляет большой набор методов, полезных для обработки структур данных и требуют от вас реализовать только один метод - &lt;code&gt;each&lt;/code&gt;. Так, для любого класса, который будет вести себя как коллекция и реализовывать метод &lt;code&gt;each&lt;/code&gt;, может быть использован &lt;em&gt;Enumerable&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: &lt;a href=&quot;http://mauricio.github.io/2015/01/12/implementing-enumerable-in-ruby.html&quot; target=&quot;_blank&quot;&gt;Оригинал статьи&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Хороший способ понять как &lt;em&gt;Enumerable&lt;/em&gt; работает - реализовать его основные методы. Реализовывая каждый метод самостоятельно, мы лучше понимаем, что каждый из них делает и как можно построить такую функциональность, которая требует реализации только одного метода.&lt;/p&gt;

&lt;p&gt;Во-первых, нам нужен класс, который будет включать наш собственный модуль &lt;code&gt;CustomEnumerable&lt;/code&gt;, давайте определим его:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayWrapper&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;erable&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Здесь не так много кода, инклудим &lt;code&gt;CustomEnumerable&lt;/code&gt; (нашу собственную реализацию &lt;em&gt;Enumerable&lt;/em&gt;) и пишем враппер для Array. Также реализован метод &lt;code&gt;==&lt;/code&gt;, который необязателен для функциональности &lt;em&gt;Enumerable&lt;/em&gt;, но нужен нам чтобы легче использовать матчеры Rspec.&lt;/p&gt;

&lt;h3 id=&quot;map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;В документации про &lt;code&gt;map&lt;/code&gt; написано:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Возвращает новый массив с результатами выполнения блока для каждого элемента в исходном массиве.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Итак, наш код должен вызывать переданный блок кода на каждом элементе коллекции и затем генерировать новый массив с результатом выполнения каждого вызова. Давайте реализуем это:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;CustomEnumerable&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Это будет шаблон почти для всех методов, которые мы создаем: создаем целевой массив, вызываем метод &lt;code&gt;each&lt;/code&gt; и делаем нужную работу. Важно знать, что наша реализация ничего не знает о том где будет включена (included), ожидается только, что у объекта будет метод &lt;code&gt;each&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Чтобы увидеть &lt;code&gt;map&lt;/code&gt; в действии давайте умножим каждый элемент массива на 2:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;maps the numbers multiplying them by 2&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Вот что говорит документация о &lt;code&gt;find&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Помещает каждую запись массива в блок. Возвращает первое вхождение для которого блок не false. Если ни один объект не подошел вызывается переменная ifnone, если она не задана возвращается nil.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;find&lt;/code&gt; используется чтобы искать объекты в &lt;em&gt;Enumerable&lt;/em&gt; совпадающие с блоком, переданным в метод, давайте реализуем его:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ifnone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ifnone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ifnone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Вначале мы устанавливаем переменные, в одну мы сохраним результат, если он будет, а другая нужна в качестве сигнала, если мы действительно найдем значение. Почему бы просто не использовать переменную &lt;code&gt;result&lt;/code&gt; со значением &lt;code&gt;nil&lt;/code&gt; если мы ничего не нашли? Потому что &lt;code&gt;nil&lt;/code&gt; может быть тем самым значением, которое ищет пользователь!&lt;/p&gt;

&lt;p&gt;Итак, нам действительно нужно знать нашли мы что-то (неважно что это) или нет до того как будем возвращать результат. И если мы ничего не нашли то вызываем результат &lt;code&gt;ifnone&lt;/code&gt;, если &lt;code&gt;ifnone&lt;/code&gt; - &lt;code&gt;nil&lt;/code&gt; просто вернем его.&lt;/p&gt;

&lt;p&gt;Есть много вариантов использования для &lt;code&gt;find&lt;/code&gt;, например мы можем искать элемент массива:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;finds the item given a predicate&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Мы можем изменить значение по-умолчанию если результат не найден:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns the ifnone value if no item is found&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Это полезно если вы всегда хотите возвращать какое-то значение, даже если ничего не нашлось.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: в случае выше, мы возвращаем ноль, если ничего не нашлось, вместо дефолтного nil.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ну и в простых случаях всегда можно оставить дефолтное значение:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;returns nil if it can&amp;#39;t find anything&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Все отлично, &lt;code&gt;find&lt;/code&gt; возвращает первое совпадение в коллекции, но что если я хочу найти вернуть все значения внутри &lt;em&gt;Enumerable&lt;/em&gt; удовлетворяющие критериям? Нам нужно использовать метод &lt;code&gt;find_all&lt;/code&gt;!&lt;/p&gt;

&lt;h3 id=&quot;findall&quot;&gt;&lt;code&gt;find_all&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Снова обратимся к документации:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Возвращает массив, содержащий все элементы из перечисления для которых переданный блок возвращает значение &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Итак, теперь у нас нет значений по-умолчанию, метод всегда возвращает массив всех объектов для которых выполняется переданный в блоке код (или пустой массив в случае когда совпадений нет), давайте сделаем это:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Поскольку &lt;code&gt;find&lt;/code&gt; выходит сразу же как только найдется результат, мы не можем использовать его в данном случае, наш метод &lt;code&gt;find_all&lt;/code&gt; должен быть написан с нуля. Мы создаем массив, проходим по нашему перечислению, проверяя каждый элемент и если элемент подходит, добавляем его в массив с результатами, по окончанию мы возвращаем коллекцию с объектами, которые совпадают.&lt;/p&gt;

&lt;p&gt;Давайте посмотрим на несколько примеров:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;finds all the numbers that are greater than 2&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;does not find anything&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_empty&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Даже если совпадений не будет, код вернет массив (хоть и пустой), так что при использовании &lt;code&gt;find_all&lt;/code&gt; нужно не забывать проверять что массив имеет объекты или нет (вместо проверки на nil, как это было сделано в &lt;code&gt;find&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;reduce&lt;/code&gt; или &lt;code&gt;inject&lt;/code&gt; (также известный как &lt;code&gt;foldLeft&lt;/code&gt; в других языках как OCaml или Scala) это метод который обрабатывает элементы &lt;em&gt;enum&lt;/em&gt; применяя к ним блок, принимающий два параметра - аккумулятор (memo) и обрабатываемый элемент. На каждом шаге аккумулятору &lt;em&gt;memo&lt;/em&gt; присваивается значение, возвращенное блоком. Первая форма позволяет присвоить аккумулятору некоторое исходное значение. Вторая форма в качестве исходного значения аккумулятора использует первый элемент коллекции (пропуская этот элемент при проходе). Хоть и звучит странно, это очень полезная функция.&lt;/p&gt;

&lt;p&gt;Давайте посмотрим в документацию:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Комбинирует все элементы в &lt;em&gt;enum&lt;/em&gt;, применяя бинарную операцию, переданную в виде блока или символа в метод.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you specify a block, then for each element in enum the block is passed an accumulator value (memo) and the element. If you specify a symbol instead, then each element in the collection will be passed to the named method of memo. In either case, the result becomes the new value for memo. At the end of the iteration, the final value of memo is the return value for the method.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Если явно не указано начальное значение для &lt;em&gt;memo&lt;/em&gt;, то первый элемент коллекции используется в качестве начального значения &lt;em&gt;memo&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Таким образом, мы должны получить блок или символ и мы можем получить начальное значение, если оно не передано, то в качестве начального значения будет использоваться первый элемент. Эта реализация на самом будет немного сложнее, давайте начнем с простого случая когда мы передаем в метод и блок и начальное значение:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Итак, это довольно просто, мы вызываем блок с аккумлятором и элементом и следующий аккумулятор это производная вызова блока. Довольно простая реализация, но эта абстракция невероятно мощная и доступна во всех функциональных языках программирования для аггрегации (reduce в данном случае, это часть парадигмы map-reduce).&lt;/p&gt;

&lt;p&gt;Давайте посмотрим на пример:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sums all numbers&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И в примере у нас простая reduce функция, которая производит сложение всех элементов. Также важно проверить случай, когда &lt;em&gt;enum&lt;/em&gt; пустой, если это так, функция должна вернуть начальное значение:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns the accumulator if no value was provided&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь, давайте добавим первый опциональный параметр, символ операции который применяется вместо блока.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;you must provide either an operation symbol or a block, not both&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Symbol&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;the operation provided must be a symbol&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Фактически реализация особо не поменялась, мы добавили проверку которая исключает случаи передачи в метод лишнего, так как должен быть передан либо символ операции либо блок. Далее мы определяем блок, если в &lt;code&gt;operation&lt;/code&gt; передан символ то используем его, если там &lt;code&gt;nil&lt;/code&gt; то присваим блок в &lt;code&gt;block&lt;/code&gt; иначе вызываем ошибку. Основная петля (loop - т.е. проход по элементам перечисления) по факту не изменилась.&lt;/p&gt;

&lt;p&gt;Теперь посмотрим на использование:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;executes the operation provided&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Первое - базовое использование, вызов &lt;code&gt;reduce&lt;/code&gt; с символом, который применяется к аккумулятору и каждому значению. Это тот же самый пример что и для нашей первой реализации &lt;code&gt;reduce&lt;/code&gt;, но теперь используется меньше кода.&lt;/p&gt;

&lt;p&gt;Теперь давайте посмотри на ошибочные варианты, во-первых передадим в метод и оператор и блок:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;fails if both a symbol and a block are provided&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;you must provide either an operation symbol or a block, not both&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Когда переданы оба параметра, мы должны выдать ошибку, потому что непонятно что хочет пользователь. Тоже если то, что передано в &lt;code&gt;operation&lt;/code&gt; не является символом.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fails if the operation provided is not a symbol&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;the operation provided must be a symbol&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Не &lt;code&gt;Symbol&lt;/code&gt;? Извини, не могу это использовать.
&amp;lt;/br&amp;gt;
Теперь, последний шаг нашей реализации - параметр аккумулятор теперь опциональный. Если его нет, должен быть использован первый элемент коллекции. Теперь у нас есть 4 варианта использования &lt;code&gt;reduce&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;accumulator&lt;/code&gt; + блок кода&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;accumulator&lt;/code&gt; + &lt;code&gt;operation&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;operation&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;без параметро + блок&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Давайте сделаем тесты для двух случаев, которые мы пропустили ранее, вызов только &lt;code&gt;operation&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;executes the operation provided without an initial value&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И вызов только блока:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;executes the block provided without an initial value&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Почему эти два теста?&lt;/p&gt;

&lt;p&gt;Посмотрим на них, в общем-то они одинаковые, в обоих случаях нет аккумулятора, разница только в том, что в одном передается блок, но оба должны вытащить первый элемент коллекции и затем запустить &lt;code&gt;reduce&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Если мы попробуем запустить эти тесты:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;Failures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CustomEnumerable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provided&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;NoMethodError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`call&amp;#39; for nil:NilClass&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;  # ./lib/custom_enumerable.rb:47:in `&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;  # ./spec/custom_enumerable_spec.rb:12:in `each&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ./spec/custom_enumerable_spec.rb:12:in `each&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ./lib/custom_enumerable.rb:46:in `reduce&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ./spec/custom_enumerable_spec.rb:128:in `block (3 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CustomEnumerable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provided&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;wrong&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ./lib/custom_enumerable.rb:32:in `reduce&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# ./spec/custom_enumerable_spec.rb:134:in `block (3 levels) in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Как мы будем делать это? Большая часть кода будет заниматься жонглированием параметров. &lt;code&gt;reduce&lt;/code&gt; был объявлен задолго до того как в &lt;code&gt;ruby&lt;/code&gt; появились именованные параметры, нет магического способа определить аккумулятор это операция или нет, мы должны проверить это вручную.&lt;/p&gt;

&lt;p&gt;Также, нам нужен способ получить первый элемент коллекции, иначе нам придется это делать в самом методе &lt;code&gt;reduce&lt;/code&gt;. Давайте начнем с реализации метода &lt;code&gt;first&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Использовать его очень просто:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns the first element inside a collection&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns nil if the collection is empty&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Если вы спрашиваете себя - почему он использует &lt;code&gt;break&lt;/code&gt; а не просто возвращает элемент из &lt;code&gt;each&lt;/code&gt;, попробуйте поменять код на:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
Что сейчас произошло?
&lt;br /&gt;
Вторая спека которая ожидает что вернется &lt;code&gt;nil&lt;/code&gt;, когда коллекция пустая, провалилась. Почему? Потому что &lt;code&gt;each&lt;/code&gt; возвращает саму коллекцию когда запускается, так как код ни разу не был выполнен (коллекция пустая!) &lt;code&gt;each&lt;/code&gt; просто возвращает себя а не &lt;code&gt;nil&lt;/code&gt;, как мы ожидаем. Вот почему нам нужно использовать &lt;code&gt;return&lt;/code&gt; и &lt;code&gt;break&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Теперь, когда метод &lt;code&gt;first&lt;/code&gt; написан, давайте сделаем финальную реализацию &lt;code&gt;reduce&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;you must provide an operation or a block&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;you must provide either an operation symbol or a block, not both&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Symbol&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArgumentError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;the operation provided must be a symbol&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nil?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ignore_first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore_first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Учитывая, что мы не знаем как будут переданы параметры или структуру коллекции, мы не можем оптимизировать данный вызов (если только не задублируем код немного, например, добавив упорядочивание реализации если переда аккумулятор). Но, так как мы хотим, чтобы код работал во всех случаях, мы будем надеяться что классы, включающие данный модуль будут предоставлять реализацию с более ровными структурами.&lt;/p&gt;

&lt;p&gt;Код начинается с проверки всех параметров, если параметры не переданы, выходим, нечего делать. Далее начинается проверка какую ситуацию мы решаем, вначале проверяется - если &lt;code&gt;operation&lt;/code&gt; и &lt;code&gt;block&lt;/code&gt; - &lt;code&gt;nil&lt;/code&gt;, значит поле &lt;code&gt;accumulator&lt;/code&gt; должно быть операцией и значит у нас нет аккумулятора.&lt;/p&gt;

&lt;p&gt;Когда у нас есть параметр &lt;code&gt;operation&lt;/code&gt; мы достигаем другого куска, проверка аккумулятора. Если аккумулятор &lt;code&gt;nil&lt;/code&gt;, мы должны брать первый элемент коллекции, а также сказать методу игнорировать первую итерацию.&lt;/p&gt;

&lt;p&gt;Наша новая петля &lt;code&gt;each&lt;/code&gt; теперь проверяет специальные переменные в случае пустого аккумулятора, так что мы можем безопасно обрабатывать коллекцию без дублирования значений. Это, кстати, неплохое место для оптимизации.&lt;/p&gt;

&lt;p&gt;И это завершает реализацию метода &lt;code&gt;reduce&lt;/code&gt;, посмотрите можете ли вы найти более быстрое или качественное решение, безусловно есть варианты лучше моего.&lt;/p&gt;

&lt;h3 id=&quot;reduce-magic&quot;&gt;&lt;code&gt;reduce&lt;/code&gt; magic&lt;/h3&gt;

&lt;p&gt;Теперь, когда у нас есть реализация &lt;code&gt;reduce&lt;/code&gt;, есть много методов, которые мы можем построить на его базе, например &lt;code&gt;min&lt;/code&gt; и &lt;code&gt;max&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;min&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulator&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Наш &lt;code&gt;reduce&lt;/code&gt; уже обрабатывает вариант с пустым значением:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;produces nil if it is empty&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;И случай одиночного варианта:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;produces 1 as the max result&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ArrayWrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Нашей реализация &lt;code&gt;min&lt;/code&gt; и &lt;code&gt;max&lt;/code&gt; не нужно заботиться об этом, все что нужно сделать это передать блок который делает сравнение и возвращает наибольший или наименьший элемент, всю остальную работу делает &lt;code&gt;reduce&lt;/code&gt;. Мощно, не так ли?&lt;/p&gt;

&lt;p&gt;Есть еще много методов &lt;code&gt;Enumerable&lt;/code&gt; помимо &lt;code&gt;reduce&lt;/code&gt;, такие как &lt;code&gt;each_with_index&lt;/code&gt;, &lt;code&gt;each_with_object&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;max_by, min_by&lt;/code&gt; и другие, попробуйте также реализовать их на &lt;code&gt;ruby&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ну и все что было сделано в этом примере доступно на &lt;a href=&quot;https://github.com/mauricio/enumerable_example&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/understanding_enumerable_methods_by_re-implementing_them_in_ruby/&quot;&gt;Понимание методов Enumerable методом реализации их на Ruby&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on October 21, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Создаем Rails 5 API бекенд и Ember.js фронтенд c нуля]]></title>
  <link rel="alternate" type="text/html" href="/2015-10-09-how_to_build_a_rails_5_api_only_and_ember_application_from_scratch/" />
  <id>/how_to_build_a_rails_5_api_only_and_ember_application_from_scratch</id>
  <published>2015-10-09T22:39:13+03:00</published>
  <updated>2015-10-09T22:39:13+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Эта инструкция рассказывает как создать приложение на &lt;a href=&quot;http://rubyonrails.org/&quot; target=&quot;_blank&quot;&gt;Rails&lt;/a&gt; API в качестве бекенда с &lt;a href=&quot;http://emberjs.com/&quot; target=&quot;_blank&quot;&gt;Ember&lt;/a&gt; на фронтенде c нуля. Cтатья объединяет два поста на эту тему &lt;a href=&quot;http://wyeworks.com/blog/2015/6/30/how-to-build-a-rails-5-api-only-and-ember-application&quot; target=&quot;_blank&quot;&gt;первый&lt;/a&gt; и &lt;a href=&quot;https://devmynd.com/blog/2014-7-rails-ember-js-with-the-ember-cli-redux-part-1-the-api-and-cms-with-ruby-on-rails&quot; target=&quot;_blank&quot;&gt;второй&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: Оригинал статьи &lt;a href=&quot;http://aviav.github.io/blog/2015/09/21/how_to_build_a_rails_5_api_only_and_ember_application_from_scratch/&quot; target=&quot;_blank&quot;&gt;aviav&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/rails/rails/pull/19832&quot; target=&quot;_blank&quot;&gt;Rails API был влит в мастер ветку Rails&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section&quot;&gt;Создаем бекенд&lt;/h3&gt;

&lt;p&gt;На момент написания статьи Rails 5 требует Ruby версии 2.2.2 и выше, если вы используете &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;rvm&lt;/a&gt;, выполните &lt;code&gt;rvm install 2.2.3&lt;/code&gt;, чтобы установить требуемую версию. Чтобы использовать в качестве дефолтной версии &lt;code&gt;rvm use 2.2.3 --default&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: Для каждого проекта, я рекомендую создавать отдельный гемсет, дабы не испытывать проблем с зависимостями, это можно сделать по &lt;a href=&quot;http://doam.ru/sozdaniye-novogo-prilozheniya-na-rails/&quot; target=&quot;_blank&quot;&gt;моей статье.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Так как Rails 5 на данный момент не зарелизен, нам нужно клонировать репозиторий на Github и генерировать приложение из исходников. Для этого выполняем команды:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git://github.com/rails/rails.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rails
bundle
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;railties/exe/rails new ../my_api_app --api --edge&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: Лично у меня, на третьей команде возникли трудности с установкой гема nokogiri, помогла команда &lt;code&gt;gem install nokogiri -v 1.6.7rc3 --pre&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section-1&quot;&gt;Генерируем ресурс пользователи&lt;/h4&gt;

&lt;p&gt;Мы сгенерируем очень простое приложение с помощью генератора rails (&lt;code&gt;rails generate scaffold&lt;/code&gt;) и выполним миграции:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../my_api_app
bin/rails g scaffold user name
bin/rake db:migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;json---&quot;&gt;Установим JSON формат сериализации данных&lt;/h4&gt;

&lt;p&gt;REST адаптер Ember требует чтобы root объекты были представлены в JSON. Это можно достигнуть установкой json адаптера вместо flatten_json сериалайзера Active Model.
Создаем новый файл инициализации &lt;code&gt;config/initializers/ams_json_adapter.rb&lt;/code&gt; включающий следующий текст:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adapter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Чтобы протестировать что данные представляются в нужном формате, запустим сервер с помощью команды &lt;code&gt;bin/rails server&lt;/code&gt; и создадим нового пользователя с помощью &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type:application/json; charset=utf-8&amp;quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-d &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;user&amp;quot;: {&amp;quot;name&amp;quot;:&amp;quot;Hans&amp;quot;}}&amp;#39;&lt;/span&gt; http://localhost:3000/users&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Открыв в браузере &lt;code&gt;localhost:3000/users&lt;/code&gt;, мы можем увидеть только что созданного пользователя и то что данные отображаются в формате, который мы указали.&lt;/p&gt;

&lt;h4 id=&quot;cors&quot;&gt;Установка CORS&lt;/h4&gt;

&lt;p&gt;Так как наши бекенд и фронтенд будут запускаться отдельно, нам нужно сконфигурировать Cross Origin Resource Sharing (CORS). Мы будем пробовать бекенд на localhost:3000 и фронтенд на localhost:4200. В начале, нам нужно раскомментировать &lt;code&gt;rack-cors&lt;/code&gt; в Gemfile, запустить &lt;code&gt;bundle&lt;/code&gt; и добавить следующий код в config/initializers/cors.rb:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Avoid CORS issues when API is called from the frontend app&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Handle Cross-Origin Resource Sharing (CORS) in order to accept cross-origin AJAX requests&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Read more: https://github.com/cyu/rack-cors&lt;/span&gt;

 &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert_before&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Rack::Cors&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;origins&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;localhost:4200&amp;#39;&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;ss&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;nb&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;От переводчика: здесь и далее, я советую использовать адрес 0.0.0.0 для запуска серверов вместо localhost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-2&quot;&gt;Создаем фронтенд&lt;/h3&gt;

&lt;p&gt;Данная инструкция включает Ember приложение, которое использует простой ресурс &lt;code&gt;Users&lt;/code&gt; чтобы получать данные от Rails API и показывать их на главной странице.&lt;/p&gt;

&lt;h4 id=&quot;ember-cli---&quot;&gt;Установка Ember CLI и созадние фронтенд&lt;/h4&gt;

&lt;p&gt;Для установки Ember CLI, мы используем –no-optional, так как он менее подвержен ошибкам. Используя nvm, нам не нужно запускать npm от пользователя root, это исключает проблемы прав:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install -g ember-cli --no-optional&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create the Ember.js app:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
ember new my_ember_frontend
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ember_frontend&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;На момент написания статьи, даже с использованием текущей версии node.js, появляется предупреждение: &lt;code&gt;Future versions of Ember CLI will not support v4.1.0. Please update to Node 0.12 or io.js.&lt;/code&gt;. Не волнуйтесь: фикс этого ошибочного сообщения анонсирован и будет добавлен в следущих версиях Ember CLI.&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;Генерируем адаптер приложения&lt;/h4&gt;

&lt;p&gt;Чтобы заставить наше приложение на Ember общаться с Rails приложением, мы сгенерируем адаптер:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ember generate adapter application&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь отредактируем файл &lt;code&gt;app/adapters/application.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DS&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ember-data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ActiveModelAdapter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://localhost:3000&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;users--routerjs&quot;&gt;Добавляем ресурс Users в router.js&lt;/h4&gt;

&lt;p&gt;Редактируем &lt;code&gt;app/router.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ember&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./config/environment&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;locationType&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;users&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;user&quot;&gt;Генерируем модель User&lt;/h4&gt;

&lt;p&gt;Вначале,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ember generate model user&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Затем редактируем &lt;code&gt;app/models/user.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DS&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ember-data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;usersindex&quot;&gt;Генерируем маршрут Users/index&lt;/h4&gt;

&lt;p&gt;Теперь,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ember generate route users/index&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Редактируем &lt;code&gt;app/routes/users/index.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ember&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;usersindex-1&quot;&gt;Пишем шаблон для Users/index&lt;/h4&gt;

&lt;p&gt;Редактируем &lt;code&gt;app/templates/users/index.hbs&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    { {#each model as |user|}}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt; { {user.name}} &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    { {/each}}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
{ {outlet}}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;Тестируем приложение&lt;/h4&gt;

&lt;p&gt;Чтобы протестировать наше приложение, запустим в директроии Rails приложения:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bin/rails s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;и в каталоге Ember приложения:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ember serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Теперь откроем в браузере страницу &lt;code&gt;localhost:4200/users&lt;/code&gt; чтобы проверить работу приложения!
&lt;br /&gt;
Большое спасибо уходит &lt;a href=&quot;http://moritz-breit.de/&quot; target=&quot;_blank&quot;&gt;Moritz&lt;/a&gt; за корректировку данного поста!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-10-09-how_to_build_a_rails_5_api_only_and_ember_application_from_scratch/&quot;&gt;Создаем Rails 5 API бекенд и Ember.js фронтенд c нуля&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on October 09, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Оптимизируем работу Motorola Moto G (first gen.)]]></title>
  <link rel="alternate" type="text/html" href="/2015-06-30-optimiziruem-rabotu-motorola-moto-g-first-gen/" />
  <id>/optimiziruem-rabotu-motorola-moto-g-first-gen</id>
  <published>2015-06-30T00:12:00+03:00</published>
  <updated>2015-06-30T00:12:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Никогда не задумывался о скорости работы моего смартфона. Да он дешевый и, по сегодняшним меркам, слабый, но всегда делает свою работу, самое главное что устраивает диагональю экрана, тяжело найти подобное решение на рынке. Тормоза наблюдаются только при запуске “тяжелых” приложений и браузера chrome.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5765/21466131880_c8105ca169_o.jpg&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Хром “ликает”, это норма ©&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Но недавно, после одной статьи на хабре, я задумался о том, что было-бы, если мой телефон работал быстрее. В результате я полез ковыряться в настройках. Тут стоит сказать, что установлена у меня на аппарате Lollipop GPE, хотя покупался не у гугла, просто хотелось побыстрее пятерку поставить. В итоге моих недолгих ковыряний и двух дневной обкатки, телефон стал действительно летать, хотя и заметно это только по тому, что до этого он работал медленней.&lt;/p&gt;

&lt;p&gt;Оптимизация получилось очень простой, просматривая &lt;code&gt;Настройки -&amp;gt; Приложения -&amp;gt; Показать кешированные процессы&lt;/code&gt; понял, что многие процессы кешируются и хранятся в памяти, но при этом не используются, либо кешируются на flash память и медленно из нее выгружаются (точно не разбирался в этом вопросе) и попробовал отключить кеширование процессов в настройках для разработчиков. Это было сделано вечером при 100% батареи, проснувшись же утром, я обнаружил 20% заряда аккумулятора, при условии, что раньше за ночь съедалось максимум 20%, в результате батареи хватило ровно чтобы доехать до работы. После того как энергоресурсы смартфона были пополнены, я стал разбираться в причинах, и оказалось, что все “топливо” сожрал гугл календарь. Учитывая что отключить его толком нельзя без прав рута, я догадался просто отключить синхронизацию календаря в &lt;code&gt;Настройки -&amp;gt; Аккаунты&lt;/code&gt;, так как не использую эту функцию в принципе. После этого телефон буд-то искупался в яме лазаря, т.е. стал быстро работать и долго жить.&lt;/p&gt;

&lt;p&gt;P.S. В этом году Motorola должны выпустить модель G уже 3-го поколения и в сеть утекли фотографии, возможно я его приобрету, но с другой стороны, зачем менять смартфон, который работает отлично?&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-06-30-optimiziruem-rabotu-motorola-moto-g-first-gen/&quot;&gt;Оптимизируем работу Motorola Moto G (first gen.)&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on June 30, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Онлайн-школа Thinknetica.com]]></title>
  <link rel="alternate" type="text/html" href="/2015-06-14-about-thinknetica/" />
  <id>/about-thinknetica</id>
  <published>2015-06-14T00:12:00+03:00</published>
  <updated>2015-06-14T00:12:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Первый практический опыт с Rails у меня был по книге Майкла Хартла, и выполнив все практические занятия, включая деплой на хероку, кажется что должен был что-то запомнить, чему-то научиться, но ты по-прежнему смотришь в код и думаешь - как это, блин, работает? Модели, контроллеры, миграции, ajax, сессии … Когда начинал заниматься, я знал как создать новый проект, знал про rvm и git, и очень много о production (наследие СА), но практически ничего не знал о тестировании, о том как все взаимодействует внутри Rails.&lt;/p&gt;

&lt;p&gt;Курс познакомил меня с разными типами тестирования, дал хорошую практику в разработке на рельсах, показал полезные гемы, трюки и хаки. Помимо самого фреймворка, Виталий дает очень много полезного “смежного” стафа, например, отложенные задачи, поиск и еще кучу всего. Самое главное, что по итогам, я с гордостью могу показать приложение на Ruby on Rails, которое лежит в репозитории и работает на сервере, в каждой части которого я могу сказать что и зачем написано, объяснить для чего используется тот или иной гем.&lt;/p&gt;

&lt;p&gt;И хоть попал на курс, я только потому, что студентам предоставляется скидка, я благодарен ребятам из онлайн-школы &lt;a href=&quot;http://www.thinknetica.com/&quot; target=&quot;_blank&quot;&gt;Thinknetica&lt;/a&gt; за их работу.&lt;/p&gt;

&lt;p&gt;Однако, стоит сказать о паре минусов: во-первых, не стоит идти на этот курс если у вас недостаточно свободного времени, хотя Виталий об этом предупреждает, заниматься нужно каждый день и возможно придется чем-то пожертвовать, во-вторых, скринкасты не ориентированы на расширенные занятия, т.е. следующий начинается с того места на котором закончился предыдущий, при этом у вас сделано больше и некоторые вещи могут вообще отличаться.&lt;/p&gt;

&lt;p&gt;В любом случае для меня этот курс оказался очень полезным и эффективным, не только для разработки на RoR, но и разработки веб-приложений в принципе.&lt;/p&gt;

&lt;p&gt;P.S. Проект сделанный на курсе доступен по следующим ссылкам:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tonymadbrain/qna&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://qna.doam.ru&quot; target=&quot;_blank&quot;&gt;production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-06-14-about-thinknetica/&quot;&gt;Онлайн-школа Thinknetica.com&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on June 14, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Рассуждения о СМИ]]></title>
  <link rel="alternate" type="text/html" href="/2015-05-27-rassujdeniya-o-smi/" />
  <id>/rassujdeniya-o-smi</id>
  <published>2015-05-27T00:12:00+03:00</published>
  <updated>2015-05-27T00:12:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Давно хочется записать свои размышления на эту тему. Сейчас я живу в Москве и здесь с этим проблем нет. Очень много источников информации. Быстро узнать о ситуациях в городе не проблема, хочешь просто твиттер читай, по тегам или подписавшись на разные каналы, хочешь просто по сайтам шарься, да хоть бесплатную газету, которую в метро раздают листай. А вот в других городах, к которым я имею какое-либо отношение, дела обстоят иначе.&lt;/p&gt;

&lt;p&gt;Так, например, если вы хотите читать о Воронеже как о прогрессивном городе, с кучей интересных проектов, обустройством для людей и вообще с положительной стороны, то вам нужен хипстерский &lt;a href=&quot;http://downtown.ru/voronezh/&quot; target=&quot;_blank&quot;&gt;downtown.ru&lt;/a&gt;. Если же вы горите желанием знать все о “преступном” Воронеже, то в этом поможет интернет издание &lt;a href=&quot;http://www.moe-online.ru/&quot; target=&quot;_blank&quot;&gt;МОЁ&lt;/a&gt;. Лично я читаю твиттер аккаунты и первого и второго СМИ, и информационные сообщения дико разнятся. Если первые пишут про разные выставки, модную одежду, каких-то “классных” людей, то твиты от “МОЁ” это буд-то привет из 90-х, за день там всегда кого-то убили, ограбили или сожгли. В том же Воронеже существует еще куча разных ресурсов, но в основном они будут дублировать новости. &lt;/p&gt;

&lt;p&gt;Еще актуальным источником свежей информации о городе, событиях и новостях стали паблики во вконтакте, например “Подслушано …”. Хотя я, конечно, ставлю под сомнение такие СМИ.  &lt;/p&gt;

&lt;p&gt;Итак, заметка получается короткая и в конце я бы хотел сказать пару слов о Дубне. Казалось бы близость к Москве должна положительно влиять на этот город, так же как и тот фактор что это наукоград. Однако, по информционному обеспечению Дубна остается “деревней”. Есть пара человек, которые пишут “типа новости” в твиттер, местные газеты вроде пытаются вести деятельность в интернете. Но по факту основные новости передаются “из уст в уста” и во время “автобусных” сплетен. “Да наши кондукторы знаю все, что в городе твориться, кому жена изменила, а кто из дома ушел” - заявлял начальник из РАТЫ, с которым я общался по некоторым вопрсоам. И печально, что в городе с большим университетом, ОИЯИ, особой экономической зоной, при его размерах никто не может нормально организовать ни информационное обеспечение граждан ни условия для проживания.  &lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-05-27-rassujdeniya-o-smi/&quot;&gt;Рассуждения о СМИ&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on May 27, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Mariadb не, использовать Mysql]]></title>
  <link rel="alternate" type="text/html" href="/2015-05-20-no-mariadb-just-mysql/" />
  <id>/no-mariadb-just-mysql</id>
  <published>2015-05-20T00:12:00+03:00</published>
  <updated>2015-05-20T00:12:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Изначально планировалось поставить запятую после Mariadb. Собственно сабж в том, что я хотел перевести свой сервер с парой rails приложений c mysql 5.1 на mariadb 10, но не тут то было. Я столкнулся со странной магией и из-за отсутсвия времени отступил перед лицом проблемы.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/566/21467225109_17f981a0d5_o.png&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;В начале на сервере с Centos 6.6 работали redmine, gitlab и несколько простых парсеров на ruby, которые с базой не общаются (пока). Стояла версия &lt;code&gt;mysql-server-5.1.73-3.el6_5.x86_64&lt;/code&gt;. Было произведено “легкое” обновление до &lt;code&gt;mysql-community-server-5.6.24-3.el6.x86_64&lt;/code&gt; по &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-mysql-5-6-from-official-yum-repositories&quot; target=&quot;_blank&quot;&gt;инструкции с DO.&lt;/a&gt;. Затем был произведен полный backup утилитой xtrabackup из &lt;a href=&quot;https://www.percona.com/doc/percona-server/5.5/installation/yum_repo.html&quot; target=&quot;_blank&quot;&gt;репозитория Percona&lt;/a&gt;. И наконец было выполнено обновление до версии MariaDB-server-10 (&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/yum/&quot; target=&quot;_blank&quot;&gt;ман&lt;/a&gt;).
Естественно на время обновлений сервисы отключались. И вот, готовый к неожиданностям я начал их запускать и столкнулся с ошибкой:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Incorrect MySQL client library version! This gem was compiled &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; 5.1.73 but the client library is 5.3.12-MariaDB.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Гугления привели к &lt;a href=&quot;https://github.com/brianmario/mysql2/issues/506&quot; target=&quot;_blank&quot;&gt;решению&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem uninstall mysql2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle config build.mysql2 --with-mysql-config&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/mysql_config
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Сперва я опробовал его на redmine, и оно сработало, redmine принял новую версию базы данных как родную. Однако с gitlab это не прокатило…&lt;/p&gt;

&lt;p&gt;Я бился пару дней, но в результате решил не тратить больше времени и откатился до mysql 5.6, чтобы gitlab работал. Для меня осталось загадкой, почему переустановка гема с необходимым параметром для одного приложения сработала нормально, а для другого нет. Версия гема ведь одинаковая. В печали я открыл &lt;a href=&quot;https://github.com/gitlabhq/gitlabhq/issues/9313&quot; target=&quot;_blank&quot;&gt;issue&lt;/a&gt; в репозитории gitlabhq, но судя по отсутсвию активности, решение если и будет то не скоро. Эта статья задумывалась как мануал по переходу с mysql 5 на mariadb 10, но в итоге одно разочарование.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-05-20-no-mariadb-just-mysql/&quot;&gt;Mariadb не, использовать Mysql&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on May 20, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Виртуальные серверы от Flops]]></title>
  <link rel="alternate" type="text/html" href="/2015-05-06-flops-virtual-servers/" />
  <id>/flops-virtual-servers</id>
  <published>2015-05-06T00:12:00+03:00</published>
  <updated>2015-05-06T00:12:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;В начале стоит сказать, что некоторое время назад, где-то с пол года, я, наконец, отказался от физического сервера в своем доме и перенес свою “помойку” на физический сервер в датацентре.
Конечно это дополнительные траты, но зато убрал шумелку и упростил обслуживание. Однако, через некоторое время, мне стало жалко платить за сервер, который не утилизируется и блог переехал на бесплатный хостинг - &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot;&gt;Github pages&lt;/a&gt;, а остальные контейнеры были распиханы по виртуальным серверам у провайдера &lt;a href=&quot;https://flops.ru/?refid=13509&quot; target=&quot;_blank&quot;&gt;Flops&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://goo.gl/eOu0fS&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/747/21467213069_a54bf9d84e_o.png&quot; alt=&quot;flops.ru&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Не помню как я выбирал к кому все переносить, но точно помню что Flops мне показался российским аналогом DigitalOcean, только за рубли, а не за скачущий доллар.
Таким образом уже несколько месяцев я пользуюсь услугами Flops. Хотелось бы кратко отметить плюсы и минусы данного провайдера.
Плюсы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Удобная панель&lt;/li&gt;
  &lt;li&gt;Быстрое разворачивание серверов&lt;/li&gt;
  &lt;li&gt;Достаточное количество образов с ОС&lt;/li&gt;
  &lt;li&gt;Локальная сеть между виртуалками&lt;/li&gt;
  &lt;li&gt;Удобная и информативная статистика&lt;/li&gt;
  &lt;li&gt;Приемлимые цены, в рублях&lt;/li&gt;
  &lt;li&gt;Снапшоты, бекапы (раз в 3 дня бесплатно)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Минусы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Меделенная тех. поддержка&lt;/li&gt;
  &lt;li&gt;Грубая тех. поддержка&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Стоит немного пояснить, меня всем устраивают эти ребята, но они абсолютно не умеют работать на поддержку пользователей. Какие бы акулы у них там не сидели, ответы они дают отрывистые и резкие, в результате создается впечатление, что над тобой насмехаются, а иногда в их сообщениях проскакивают искорки сарказма. Но этим можно пренебречь в пользу хорошо работающего сервиса.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/2015-05-06-flops-virtual-servers/&quot;&gt;Виртуальные серверы от Flops&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on May 06, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Алиасы для Git]]></title>
  <link rel="alternate" type="text/html" href="/2015-04-29-aliases_for_git/" />
  <id>/aliases_for_git</id>
  <published>2015-04-29T00:12:44+03:00</published>
  <updated>2015-04-29T00:12:44+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Стандартные команды гита довольно просты, и, кажется, что использовать их не сложно, пока не попробуешь алиасы.
Два символа &lt;code&gt;co&lt;/code&gt; явно быстрее вводить чем &lt;code&gt;checkout&lt;/code&gt; да и вероятность опечататься гораздо меньше.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/715/21620792628_a49b7b3171_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Лично я использую следующие алиасы:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global alias.hist &lt;span class=&quot;s1&quot;&gt;&amp;#39;log --pretty=format:&amp;quot;%h %ad | %s%d [%an]&amp;quot; --graph --date=short&amp;#39;&lt;/span&gt;
git config --global alias.lg &lt;span class=&quot;s1&quot;&gt;&amp;#39;log --graph --pretty=format:&amp;quot;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;quot; --abbrev-commit --date=relative&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Последние два, кстати, делают вывод лога более читабельным и понятным (в общем крутым).&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-04-29-aliases_for_git/&quot;&gt;Алиасы для Git&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on April 29, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Habrahabr - Радости полные штаны]]></title>
  <link rel="alternate" type="text/html" href="/2015-03-21-habrahabr/" />
  <id>/habrahabr</id>
  <published>2015-03-21T00:12:44+03:00</published>
  <updated>2015-03-21T00:12:44+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Да, заголовок описывает мое состояние, когда я увидел full-аккаунт на хабре. На самом деле я не ожидал, что инвайт дадут так быстро, поэтому и радость моя была огромная. Правда, через какое-то время, комментарии к моей статье, а точнее переводу, вернули меня в привычную колею. Да я перевел “тривиальные” вещи по парсингу на Ruby. Но когда я занимался этим вопросом и искал информацию - не было даже этого. В общем-то, на данный момент, обе моих статьи на хабрахабре - это переводы, но в дальнейшем я планирую написать свою статью, как минимум по парсингу. Это очень мощное сообщество и я рад быть его частью.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://habrahabr.ru/post/252379/&quot; target=&quot;_blank&quot;&gt;Первый перевод - выстрел из песочницы&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://habrahabr.ru/post/253439/&quot; target=&quot;_blank&quot;&gt;Второй перевод&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href=&quot;/2015-03-21-habrahabr/&quot;&gt;Habrahabr - Радости полные штаны&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on March 21, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Создание нового приложения на Rails]]></title>
  <link rel="alternate" type="text/html" href="/sozdaniye-novogo-prilozheniya-na-rails/" />
  <id>/sozdaniye-novogo-prilozheniya-na-rails</id>
  <published>2015-03-19T09:21:21+03:00</published>
  <updated>2015-03-19T09:21:21+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Понял, что часто приходится создавать новое приложение Rails, решил сделать заметку с командами. По хорошему, конечно, нужно бы написать скрипт, чтобы это дело автоматизировать.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/611/21186379074_a897e27375_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Выбираем версию ruby&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rvm use 2.2.0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Создаем гемсет&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rvm gemset create my_app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;переключаемся на новый гемсет&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rvm gemset use my_app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Устанавливаем rails&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install rails --no-ri --no-rdoc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Создаем новое приложение&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails new my_app -d postgresql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Переходим в каталог нового приложения&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Закрепляем версию руби и гемсет за данным каталогом, т.е. проектом&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rvm --ruby-version use rvm current@my_app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;сохраняем исходный конфиг database.yml и редактируем database.yml&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp config/database.yml config/database.yml.sample&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Создаем базы&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rake db:create:all&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ну и git&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git init
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;config/database.yml &amp;gt;&amp;gt; .gitignore
git add .
git ci -am &lt;span class=&quot;s2&quot;&gt;&amp;quot;initial commit&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;UPD: Скрипт я все таки сделал, но он дико заточен под меня, без параметров. Всегда создается проект с базой данных postgres и иницируется git, а также все проекты у меня лежат в каталоге ~/projects.&lt;/p&gt;

&lt;p&gt;Сам скрипт:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -n &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&amp;quot;Ты запустил скрипт с параметрами - x.x.x my_super_app (y/[a])?: &amp;quot;&lt;/span&gt; AMSURE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$AMSURE&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;y&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; 1&amp;gt;&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;2

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/projects

&lt;span class=&quot;nv&quot;&gt;rubyVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;appName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[33m### Try ruby version: $rubyVersion ###\x1B[39m&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[33m### Try application name: $appName ###\x1B[39m&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; which rvm 1&amp;gt;/dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[32m### Using RVM ###\x1B[39m&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[31m### RVM not instaled ###\x1B[39m&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

rvm use &lt;span class=&quot;nv&quot;&gt;$rubyVersion&lt;/span&gt;
rvm gemset create &lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;
rvm gemset use &lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;
gem install rails --no-ri --no-rdoc
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[32m### Rails done! ###\x1B[39m&amp;quot;&lt;/span&gt;
rails new &lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt; -d postgresql
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;
rvm --ruby-version use rvm current@&lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;
cp config/database.yml config/database.yml.sample

&lt;span class=&quot;c&quot;&gt;#git&lt;/span&gt;
git init
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;config/database.yml &amp;gt;&amp;gt; .gitignore
git add .
git ci -am &lt;span class=&quot;s2&quot;&gt;&amp;quot;Initial commit for $appName&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[32m### All done! ###\x1B[39m&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;s2&quot;&gt;&amp;quot;\x1B[33m### Do not forget edit database.yml and create DBs with &amp;#39;rake db:create:all&amp;#39; ###\x1B[39m&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    &lt;p&gt;&lt;a href=&quot;/sozdaniye-novogo-prilozheniya-na-rails/&quot;&gt;Создание нового приложения на Rails&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on March 19, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Общественный транспорт в Дубне]]></title>
  <link rel="alternate" type="text/html" href="/obshhestvenny-j-transport-v-dubne/" />
  <id>/obshhestvenny-j-transport-v-dubne</id>
  <published>2015-03-02T00:00:00+03:00</published>
  <updated>2015-03-02T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Утренняя поездка на автобусе заставила меня взяться за это — писать пост. Давно уже собирался написать про общественный транспорт в Дубне, даже есть пара черновиков, но сейчас я закончу и опубликую все.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Ездят в Дубне автобусы и маршрутки, многие считают что маршрутки это альтернатива, на самом деле нет. ИП под которым работают маршрутки оформлено на человека который работает в ОАО Рата, т. е. в той же организации, которая рулит автобусами. Таким образом у Раты, считай, монополия на общественный транспорт в этом городе. И это вытекает в определенные последствия. В городе нет троллейбусов и, к моему великому огорчению трамваев, только автобусы, только бензин/дизель.&lt;/p&gt;

&lt;p&gt;Большие и маленькие&lt;/p&gt;

&lt;p&gt;В Дубне два берега, разделенные волгой, переехать которую можно только через тоннель и дамбу. Так вот тоннель, имеет ограничения и большие (длинные) автобусы под него попадают. Поэтому на маршрутах, которые переезжают с одного берега на другой, стоят только «короткие» автобусы — Богданы. Отвратительного зеленого цвета, холодные, малой вместительности, с жесткой подвеской, неудобными сиденьями, хреновыми водителями и грубыми, тупыми кондукторами.&lt;/p&gt;

&lt;p&gt;Глубокий вдох … выдох …&lt;/p&gt;

&lt;p&gt;Соответственно, большие (длинные) автобусы курсируют только по правому берегу. Однако маршруты с левого на правый берег самые популярные и генерируют основной пассажиропоток.&lt;/p&gt;

&lt;p&gt;Маршруты&lt;/p&gt;

&lt;p&gt;Иногда, складывается ощущение, что в Рате работают дегенераты, которые никогда не учились, даже основам. Маршруты непродуманны и дублируют друг друга, а некоторые практически не используются и переходят в статус рудиментов. По выходным, например, не работает самый удобный и популярный маршрут — 11. Маршрутки ходят по двум маршрутам, один только по правому берегу, другой с берега на берег.&lt;/p&gt;

&lt;p&gt;Про устройство маршруток особо нечего сказать, они предоставляются как альтернатива и выбираешь между автобусом и маршруткой ты сам. Это относительно новые, но убитые фордики, продуваемые, с медленно открывающимися но зато автоматическими дверьми, в которых иногда сиденье может непроизвольно откинуться на сидящего сзади человека.&lt;/p&gt;

&lt;p&gt;С автобусами все сложнее. С одной стороны, сиденья есть и они целые да и сами машины, вроде как новые. Однако, в богданах, например, расстояние между сиденьями такое, что мои коленки упираются в спинку переднего сиденья (мой рост чуть больше среднего 188) и удобнее сесть не получается. Общественным транспортом Дубны абсолютно не предусмотрено передвижение инвалидов. Ни одного автобуса с низким порогом и широкой площадкой, на которую смог бы попасть человек в инвалидной коляске. Каждый день сотни стариков мучаются поднимаясь по полуметровым ступенькам.&lt;/p&gt;

&lt;p&gt;Расписание&lt;/p&gt;

&lt;p&gt;Еще одним фактом, подтверждающим, что в Рате работают идиоты, является расписание.&lt;/p&gt;

&lt;p&gt;Существует расписание движения автобусов. Оно висит на каждой остановке (ну вроде, точно не проверял). Это как бы хорошо, ты всегда точно знаешь во сколько будет автобус. Если бы это расписание составлялось грамотно и было бы актуально. Нет, они конечно обновляют таблички и на сайте есть расписание, но:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Смотреть расписание на сайте жутко неудобно&lt;/li&gt;
  &lt;li&gt;Смотреть расписание на сайте с телефона ужасно неудобно&lt;/li&gt;
  &lt;li&gt;Отсутствует мобильное приложение, поддерживаемое самой ратой&lt;/li&gt;
  &lt;li&gt;Отсутствует открытое API через которое можно было бы получать актуальную информацию о расписании&lt;/li&gt;
  &lt;li&gt;Расписание составлено так, что дополнительный автобус и основной автобус одного и того же маршрута идут с интервалом 1 минута&lt;/li&gt;
  &lt;li&gt;В расписании не учитываются варианты пересадок людей, которые не могут воспользоваться прямым маршрутом&lt;/li&gt;
  &lt;li&gt;Водители не придерживаются маршрута строго, при этом расхождения с расписанием могут достигать 5 минут.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Водители это отдельная тема. Я считаю, что последний пункт в предыдущем списке очень важен. Представьте ситуацию:&lt;/p&gt;

&lt;p&gt;Вы зная что автобус по расписанию приедет на остановку в 8.06, а на дорогу до остановки вам требуется 4 минуты, выходите из дома в 8.00, закладывая при этом 2 минуты, на случай если будет слишком скользко или еще что-нибудь. Приходите на остановку и смотрите в след уезжающему автобусу. Который приехал в 8.03, открыл- закрыл двери за 30 секунд и уехал. После чего Вы ждете еще 15 минут до следующего автобуса или едете на маршрутке, при этом расходуя лишние средства (если на автобус ты купил проездной). Иногда такое может вылиться в опоздания на работу или к врачу или еще куда-нибудь.&lt;/p&gt;

&lt;p&gt;Это субъективное мнение, я считаю, что если вы делаете расписание, то должны его придерживаться, а иначе, зачем оно тогда вообще нужно?&lt;/p&gt;

&lt;p&gt;Так вот, я думаю, что многие водители автобусов в Дубне не смотрят на время на остановках, а только на время выхода на маршрут и, предположительно, ориентируется на собственное восприятие времени. Так же, они не думают о пассажирах, так как складывается ощущение, что водители и автобусов, и маршруток думают что везут дрова или уголь. Закрыть дверь перед носом женщины, которая пробежала метров сто, чтобы успеть — легко! Не включать печку в холодную погоду — легко! Открывать дверь возле которой битком народа, когда у другой свободное пространство — легко! Все это и многое другое могут водители автобусов Раты.&lt;/p&gt;

&lt;p&gt;Конечно же стоит уделить внимание и кондукторам. Много, на самом деле, писать не хочется. Потому что практически не бывает дня, когда они с тобой не поругаются. Их можно охарактеризовать следующими словами: злые, грубые, безграмотные. Говоря безграмотные, я не имею ввиду грамотность как таковую, я подразумеваю простые правила этикета, вежливость, учтивость, потому что, создается впечатление, что их этому не научили. Собирательный образ полной кондукторши, которая расталкивает людей как ледокол арктические залежи снега, он не спроста такой. В большинстве случаев это так и есть. Они пихаются, давят ноги и постоянно грубят. За два года в Дубне, помню только пару кондукторов, которые были вежливыми. Работа в общественном транспорте, это работа с людьми, а это обязывает соблюдать некоторые рамки поведения, но видимо к Рате это не относится.&lt;/p&gt;

&lt;p&gt;Конечно, они же монополисты, люди жалуются потихоньку, жалуются друг другу, но пользуются. Потому что альтернатив нет и никто не чешется.&lt;/p&gt;

&lt;p&gt;Возвращаясь к утренней поездке. Всю дорогу, к нам в ноги дул холодный воздух, потому что, по мнению кондуктора и водителя это нормально. Якобы печка дует в одну сторону горячим воздухом, в другую холодным. Т.е. два варианта, либо проектировщики дебилы, либо ? Мы стараемся садиться на одно и тоже место в автобусе, и это первый раз, когда от печки дул холодный воздух (всегда был горячий). Да наверно, это тот самый автобус, в котором печка должна работать именно так, а не так как на всех других этой же модели.&lt;/p&gt;

&lt;p&gt;Этот пост полон злобы, агрессии и сарказма. За два года, проведенных в этом городе, каждый будний день проезжая от университета до особой экономической зоны, с пересадкой два раза в день, я не заметил ни каких изменений в сторону улучшения качества обслуживания на транспортных линиях Дубны. И все это наводит на грустные мысли.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5788/21033019483_05f51256c6_o.png&quot; alt=&quot;да всем насрать&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/obshhestvenny-j-transport-v-dubne/&quot;&gt;Общественный транспорт в Дубне&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on March 02, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Как айтишник ноутбук покупает]]></title>
  <link rel="alternate" type="text/html" href="/kak-ajtishnik-noutbuk-pokupaet/" />
  <id>/kak-ajtishnik-noutbuk-pokupaet</id>
  <published>2015-02-23T00:00:00+03:00</published>
  <updated>2015-02-23T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Я давно хочу приобрести macbook и, к сожалению, не успел это сделать до нового года, точнее до того времени как доллар вырос в два раза и цены на технику apple соответственно тоже. В результате, до нового года я мог купить pro с ретина дисплеем, а сейчас могу рассчитывать только на air начала 14 года. Но я не унываю и жду спад доллара или повышение зарплаты. В любом случае, мне надоело мониторить цены самостоятельно, постоянно заходить на кучу интернет магазинов и сравнивать цены и было решено написать парсер.&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Как выглядела первая версия сейчас уже наверно не найти, разве что в git’е до init коммита откатываться. Сейчас работаю уже над третьей версией скрипта. Пишу его конечно же на ruby (по всей видимости это мой любимый язык). Пытаюсь избавиться от повторений в коде и добавляю всякие фишки. Последней фичей стала генерация html странички. Изначально парсер отрабатывал и присылал письмо мне на почту, ох и накопилось у меня там писем. Но теперь, он присылает мне письмо и генерирует html, который в свою очередь отдается на том же сервере nginx’ом.&lt;/p&gt;

&lt;p&gt;Для программиста это несложная задачка, для меня же, определенный опыт и повышение мастерства. Еще подумываю над статистикой и базой данных и вообще кучей функций. Резонный вопрос — зачем? Надо же хоть на чем-то учиться, да и для меня это удобнее, чем открывать 10 страниц интернет магазинов и сравнивать вручную.&lt;/p&gt;

&lt;p&gt;Вот так выглядит сгенерированный html:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/764/21031406904_98a29e0698_o.png&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;В письме все гораздо лаконичнее:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/612/21654066185_2cd37c7efe_o.png&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/kak-ajtishnik-noutbuk-pokupaet/&quot;&gt;Как айтишник ноутбук покупает&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on February 23, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Политех - альма-матер?]]></title>
  <link rel="alternate" type="text/html" href="/politeh-al-ma-mater/" />
  <id>/politeh-al-ma-mater</id>
  <published>2015-01-12T00:00:00+03:00</published>
  <updated>2015-01-12T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;В планах так много статей про университет Дубна, но недавно захотелось написать и про мой первый университет. Возможно, эта статья будет полезна тем, кто только собирается туда поступать, скорее всего, нет. Все меняется очень быстро, и за год или два меняется и программа, и преподаватели. Постараюсь описать, что я думаю и что запомнил за эти первые университетские годы. Так сложилось, что, поступая и на бакалавра, и на магистра, я руководствовался принципом “все или ничего”, т.е. не подавал документы ни в какие другие вузы. Политех, или Воронежский Государственный Технический Университет, мне посоветовали хорошие друзья. С довольно средними баллами, я не сильно рассчитывал на оглушительный успех и прошёл только в третью волну. Но был рад, ведь для меня открывалось окно в самостоятельную жизнь. Давно к ней готовился, и многие вещи делал самостоятельно, но теперь всё было по-другому. Можно сказать, что оставался только Антон и большой город. Во время последней переписи Воронеж приблизился к миллиону, так что да, он большой. Я поступил, на естественно-гуманитарный факультет, кафедра систем автоматизированного проектирования и информационных систем, специальность информационные системы (бакалавриат) в 2009 году, имея в сумме за три экзамена: математика, русский язык и физика 171 балл. По-простому, я вытянул на четвёрки все три экзамена. Мне повезло, потому что абитуриентов моего года рождения, в принципе мало. Родись я плюс или минус один год, не факт, что прошёл бы. Хотя, плюс один — наверняка бы прошёл, но это тема другой статьи.&lt;/p&gt;

&lt;p&gt;В политехе не дают общежитие с первого курса, якобы проживание в общежитии плохо влияет на обучаемость. Не уверен, что это так, ибо уже во время моего обучения, “общага была не та”. В России все студенты-инженеры пьют, и политех — не исключение, а общага в значительной мере способствует этому. Но, с появлением высокоскоростного доступа в интернет, довольно быстро картина поменялась, а со временем, когда бывшие заводилы закончили обучение и съехали, и жильцы ротировали, все изменилось. Свет, кстати, реже стал отключаться.&lt;/p&gt;

&lt;p&gt;Меня заселили в общежитие именно с первого курса, особых усилий я для этого не прилагал, но, как оказалось потом, попал в число тех пяти первокурсников, которым это разрешили. Заселился 31 августа, причём в комнату, с которой съехал, только что закончивший обучение мой друг. Первую неделю обучения у меня не было компьютера. Поэтому приходя после пар, я переписывал лекции “понятным” почерком и даже сделал первую практику по вышке (высшая математика). Всё было таким новым, интересным, я был таким наивным и открытым.&lt;/p&gt;

&lt;p&gt;Запала хватило ненадолго. Собственно, к концу первого семестра я понял, что нынешняя система образования застоялась, требует явных реформ и пересмотра, но это никому не нужно. Первую сессию я сдал отвратительно. Преподаватель вышки, которая на экзамене, обосрала мои школьные оценки с намёком на то, что они куплены или проставлены через связи, на самом деле хороший специалист, но говно человек. Она одна из немногих, кто очень правильно читал лекции, но из-за её скверного характера, я посещал их крайне редко.&lt;/p&gt;

&lt;p&gt;Система образования, все упирается в неё. У науки в России всегда нет достаточного финансирования, но проблема в другом, никто не хочет ничего менять. Ещё в школьные времена я услышал фразу “преподавать идёт тот, у кого не получилось работать никем другим”. Отчасти это правда, преподавать легче всего, учить тяжелее, научить лентяя практически невозможно. Мы, кстати, нация лентяев, многие глобальные вопросы в России приводят именно к этому, не ответ, а тяжёлый вздох, с которым ничего не поделаешь.&lt;/p&gt;

&lt;p&gt;Я отвлёкся, первый курс, это своего рода боевое крещение. На первое сентября, есть такая традиция в политехе (надеюсь, что ещё есть), первокурсники должны “угощать” старшекурсников своего факультета/кафедры, а те, в свою очередь, “угощать” рассказами, байками, историями и прочей якобы полезной информацией. У нас (на тот момент ЕГФ), это
22:36:06
происходило в лесу на “девятке”, за новыми домами, недалеко от остановки. Рассказывали о преподавателях, о традициях. Там в первый раз обмывают зачётку. Я помню, что поначалу было очень страшно, огромная толпа людей, горстка перваков вокруг парня с баклажкой пива 2,5 литра. Нужно было держать зачётку над пластиковым стаканчиком, а на её корешок льют пиво, буквально на самый краешек, которое потом попадает в стакан. И потом, нужно заземлить, всем кружком перваков. Заземление, эта традиция мне очень понравилась, я слышал, что много где так делают, но вроде все по-своему.&lt;/p&gt;

&lt;p&gt;Настоящее же “обмытие” зачётки происходит зимой, после первого семестра, теперь ты точно студент, прям вот по-настоящему. Неважно как ты сдал эту сессию, главное, что “закрылся”. Кстати, в ВГТУ весь первый семестр платят стипендию, а потом уже по результатам, но это были смешные деньги, предположу, что сейчас тоже.&lt;/p&gt;

&lt;p&gt;Закончив первый курс, я пришёл к некоторым выводам: на стипендию не проживёшь, нужно зарабатывать самому; вышка, оказывается, не такая уж и сложная; вопрос с армией нужно решать сейчас.&lt;/p&gt;

&lt;p&gt;Первое лето в Воронеже, я устроился в магазин компьютерной техники, помощником продавца. Работал как конь, получал четыре тысячи аванс и столько же зарплату, но несомненно приобрёл огромный опыт, знакомства и ещё одного хорошего друга. Тот семестр я много прогуливал, потому что отдавал приоритет работе, но сессию закрыл вовремя и даже хорошо. После нового года я уволился, проработав в магазине 6 месяцев.&lt;/p&gt;

&lt;p&gt;Впереди была неизвестность, и больше половины обучения, но я был уверен в себе, точнее, я обрёл уверенность в себе. Дальнейшее обучение было однотипным, я несколько раз менял место работы, появлялся на парах в начале семестра и в конце, вначале чтобы знать преподавателей, в конце чтобы сдавать зачёты и экзамены, посещал много студенческих вечеринок, занимался в студенческой самодеятельности (актив) и, кстати, много времени проводил с активистами, в общем, вёл полноценную студенческую жизнь.&lt;/p&gt;

&lt;p&gt;Закончилось все это “первым большим обманом”, так я называю свою ВКР (выпускная квалификационная работа) бакалавра. Многие считают, что бакалавры проходят по укороченной программе, это не так, программа отличалась от специалистов буквально парой-тройкой предметов, и тем, что приходится писать ВКР параллельно с обучением в последнем семестре. К слову, у нас даже физ.воспитание было в этом семестре. Так вот о “первом большом обмане”, самое главное в политехе на САПРИС, это акт внедрения, если у тебя есть бумажка, что твоя разработка внедрена, то реализацию никто проверять не будет, поэтому главноечтобы был интерфейс. И да, это прокатывает, это как очередной хак, только уже не с зачётом или экзаменом, а с дипломом. В своё оправдание скажу, что 80 процентов моей работы я написал сам (да, серьёзно). Где-то 120 страниц с приложениями (приложений немного, кода было мало). И всеми технологиями, о которых говорится в работе, я овладел, но это заслуга не преподавателей, от них это очень мало зависит. Следующим пунктом, после акта внедрения, является презентация, изначально, я работал на неё, а не на пояснительную записку. А текст, вообще, составил пока шёл от общежития до корпуса, буквально за пять минут до начала защиты.&lt;/p&gt;

&lt;p&gt;Я получил отлично на защите, при среднем балле 3,12, не осознавая за что, на самом же деле я просто приложил усилия и именно их и оценили. На тот момент, я уже решил полностью отказаться от алкоголя, но это не получилось, об этом напишу позже, когда придёт время. Я помню тот приторный вкус персикового шампанского, которое мы распили, чисто символически, ведь теперь мы были инженеры, по крайней мере, считали себя таковыми.&lt;/p&gt;

&lt;p&gt;И после четырёх лет, высшего образования, я пришёл к выводам: вышка плёвое дело; надо найти работу получше; пора задуматься над вопросом с армией.&lt;/p&gt;

&lt;p&gt;Сейчас, оглядываясь на то безумное время, я думаю, что это было круто, весело и так затратно. Столько важного потратилось, времени. За такой период, можно было сделать кучу всего
полезного, но я веселился. И сейчас, явственно понимаешь, что мозг постепенно теряет способность так резво усваивать информацию, а в некоторых случаях напрочь отказывается это делать, и так хочется поглощать информацию, а не пойло, извлекать опыт, а не экспу и прилагать усилия для достижения чего-то действительно хорошего, глобального, может быть вечного, отчего будешь получать наслаждение, вместо тупого забытья и угара.&lt;/p&gt;

&lt;p&gt;Недавно, в сентябре 2014, я бросил курить. Пишу это именно здесь, потому, что первый университет научил меня этому, а второй отучил. Я не говорю буквально, и программа обучения тут явно ни при чём, я говорю о людях и событиях. В отличие от многих бросивших, меня, спустя четыре месяца, все ещё тянет, сильно тянет, но теперь я знаю, что могу жить без этого, а прежнего удовольствия оно не принесёт, и благодаря одному, очень близкому человеку, сохраняется моё равновесие.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/politeh-al-ma-mater/&quot;&gt;Политех - альма-матер?&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on January 12, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Дубна - "Спонтанный пост про университет"]]></title>
  <link rel="alternate" type="text/html" href="/dubna-spontanny-j-post-pro-universitet/" />
  <id>/dubna-spontanny-j-post-pro-universitet</id>
  <published>2014-12-16T00:00:00+03:00</published>
  <updated>2014-12-16T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Вообще я хотел последовательно рассказывать о нем, в соответствии с тем, как мое мнение и видение менялось, но, когда шел на пары решил сделать несколько фотографий и описать происходящее.
Уже пару недель, а может и месяц, в университете устанавливают новые окна, я пока был только в одном кабинете в котором поменяли, но судя по тому, что окна привозят почти каждый день, они настроены поменять по максимуму. Конечно, возникает вопрос, почему зимой? Ответ, на мой взгляд, простой – финансирование. Делают пока есть деньги, а в образовании, как и в других сферах, больше всего денег в конце года.
Вот такие стопки окон постоянно появляются у главного входа.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/601/21642724742_ec9ea752b6_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Начав с окон, я решил сделать несколько фотографий коридоров. При строительстве, почему-то, было решено сделать отделку коридоров деревом. И сейчас это все покосилось, так что выглядит ужасно.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/673/21466260178_43b19e11a9_o.jpg&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/759/21466171280_c66bf06b19_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;А еще это кривое освещение… Кстати, не знаю, как на фотографии, но в реальности эти потолки низкие. Мне кажется они немногим больше двух метров.
Следующим пунктом будет атриум. Это кстати то, что больше всего мне нравится в этом университете. Это общее пространство, которое правда используется для проведения мероприятий, но в свободное время студенты спокойно размещаются здесь так, как им удобно. Как мне кажется, здесь не хватает освещения и кресел «груш», таких мешков, которые легко таскать и в которых удобно сидеть.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/569/21628042446_20da6cd7a8_o.jpg&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/670/21654127915_f23c3c2f57_o.jpg&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5688/21467269919_5b5b6ffc6f_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Вернемся к теме окон. Вот старые окна, большие, тяжелые, не открывающиеся, но пропускающие весь холод. Сколько они будут стоять, захламляя коридоры – неизвестно, но знаю эту страну, предположу, что долго.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm1.staticflickr.com/722/21466277118_6e410341ba_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ну и последним пунктом на сегодня будет лифт. Да, да, в университете Дубна есть лифт.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5641/21031429104_6536a9f00b_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Оно и понятно, большинство профессоров пожилые люди и подниматься на 4 этаж по лестнице им тяжело. Лифт «привет из 90х», без датчиков на дверях, дико трясущийся, и когда едешь в нем, ощущение что сейчас начнется полет в бездну.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5720/21466269758_ba0dfc9554_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Но, хотя бы, кнопки не пожжённые, а еще мне нравится этот старомодный и в то же время футуристический счетчик этажей.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;https://farm6.staticflickr.com/5759/21628025866_b680426668_o.jpg&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;На сам лифт недавно поставили какую-то штуку, типа чехла, который при необходимости можно опустить. Вроде это сделано для пожарной безопасности, но лично я не в курсе, как пользоваться такой штуковиной.
На этом хочется завершить данный пост, а совсем скоро я напишу про обновления в блоге, касающиеся безопасности и скорости работы.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/dubna-spontanny-j-post-pro-universitet/&quot;&gt;Дубна - &quot;Спонтанный пост про университет&quot;&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on December 16, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Быстрое создание макетов Bootstrap]]></title>
  <link rel="alternate" type="text/html" href="/by-stroe-sozdanie-maketov-bootstrap/" />
  <id>/by-stroe-sozdanie-maketov-bootstrap</id>
  <published>2014-12-10T00:00:00+03:00</published>
  <updated>2014-12-10T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img class=&quot;alignleft wp-image-1018 size-thumbnail&quot; src=&quot;https://doam.ru/wp-content/uploads/2014/12/editinn-icon_400x400-150x150.png&quot; alt=&quot;editinn-icon_400x400&quot; width=&quot;150&quot; height=&quot;150&quot; /&gt;&lt;/p&gt;

&lt;p&gt;О Фреймворке &lt;a href=&quot;http://getbootstrap.com/&quot; target=&quot;_blank&quot;&gt;Bootstrap&lt;/a&gt; было сказано не мало, и даже уже на русском языке, можно найти много информации. Я давно пытаюсь освоить его, не то чтобы это было очень сложно, однако никак не могу запомнить сетку, все эти xs-xm-sm-md. В один из таких моментов, в очередной раз обращаясь к документации, я решил поискать софт (оффлайн/онлайн), который позволял бы создавать bootstrap макеты при помощи простого перетаскивания. После недолго «гугления» и тестирования разных решений, я установил &lt;a href=&quot;http://www.pingendo.com/&quot; target=&quot;_blank&quot;&gt;Pingendo&lt;/a&gt;…&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;И да, мой выбор остановился на нем. Я не стал искать дальше, потому, что, на мой взгляд, в этой программе, есть все, что мне нужно. Скорость создания макетов увеличилась в разы. Это кстати не проплаченный пост, просто хочется поделиться хорошим инструментом.&lt;/p&gt;

&lt;p&gt;Основные элементы, сетка, классы, выравнивания, все это делается простыми кликами. Посмотреть, как будет выглядеть макет на разных разрешениях или девайсах тоже можно прямо в программе.&lt;/p&gt;

&lt;p&gt;В общем и целом, я очень доволен данной софтиной, и активно использую. Например, ниже на скриншоте макет некоторого сервиса, который, возможно, когда-нибудь допилю.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://doam.ru/wp-content/uploads/2014/12/2014-12-10-16-37-09-Skrinshot-e-krana.png&quot; rel=&quot;lightbox[1017]&quot; title=&quot;2014-12-10 16-37-09 Скриншот экрана&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-1019&quot; src=&quot;https://doam.ru/wp-content/uploads/2014/12/2014-12-10-16-37-09-Skrinshot-e-krana-1024x553.png&quot; alt=&quot;2014-12-10 16-37-09 Скриншот экрана&quot; width=&quot;750&quot; height=&quot;405&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;У инструмента есть удобная функция просмотра в браузере, а так же он кросплатформенный, но на самом деле он просто делает прототипирование удобным.&lt;/p&gt;

&lt;p&gt;Ссылки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://getbootstrap.com/&quot; target=&quot;_blank&quot;&gt;Официальный сайт Bootstrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pingendo.com/&quot; target=&quot;_blank&quot;&gt;Официальный сайт Pingendo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

    &lt;p&gt;&lt;a href=&quot;/by-stroe-sozdanie-maketov-bootstrap/&quot;&gt;Быстрое создание макетов Bootstrap&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on December 10, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Немного умений Ruby благодаря codeacademy]]></title>
  <link rel="alternate" type="text/html" href="/nemnogo-umenij-ruby-blagodarya-codeacademy/" />
  <id>/nemnogo-umenij-ruby-blagodarya-codeacademy</id>
  <published>2014-12-03T00:00:00+03:00</published>
  <updated>2014-12-03T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;a href=&quot;http://doam.ru/wp-content/uploads/2014/12/2014-12-03-12-56-00-Skrinshot-e-krana.png&quot; rel=&quot;lightbox[1014]&quot; title=&quot;2014-12-03 12-56-00 Скриншот экрана&quot;&gt;&lt;img class=&quot;aligncenter wp-image-1015 size-full&quot; src=&quot;https://doam.ru/wp-content/uploads/2014/12/2014-12-03-12-56-00-Skrinshot-e-krana.png&quot; alt=&quot;2014-12-03 12-56-00 Скриншот экрана&quot; width=&quot;985&quot; height=&quot;940&quot; /&gt;&lt;/a&gt;Меня давно уже привлекает язык программирования Ruby, а также крутой фреймворк на его основе Rails. Сегодня я закончил осваивать серию курсов по Ruby на &lt;a href=&quot;http://www.codecademy.com/&quot; target=&quot;_blank&quot;&gt;codecademy.com&lt;/a&gt; и крайне горд этим. Мне понравились интерактивные курсы именно codeacademy, они позволяют легко и удобно осваивать технологию или язык. Не знаю на сколько полученные знания «правильные», но процессом их освоения я доволен. Теперь я берусь за книгу «Ruby on Rails Tutorial — Изучение Rails на Примерах» Майкла Хартла. Конечно, с такой загрузкой, которая у меня на данный момент, продвигаться буду медленно, но это одна из целей к которой стремлюсь (программирование на Ruby/Rails).&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/nemnogo-umenij-ruby-blagodarya-codeacademy/&quot;&gt;Немного умений Ruby благодаря codeacademy&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on December 03, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Применение новых конфигов Nginx]]></title>
  <link rel="alternate" type="text/html" href="/primienieniie-novykh-konfighov-nginx/" />
  <id>/primienieniie-novykh-konfighov-nginx</id>
  <published>2014-11-26T12:15:30+03:00</published>
  <updated>2014-11-26T12:15:30+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;img style=&quot;max-width: 400px;&quot; src=&quot;https://farm8.staticflickr.com/7446/15896531813_78663a1bd0_o.jpg&quot; /&gt;
Во всех инструкциях и мануалах, которые я когда-либо читал по веб-серверу Nginx, для перезагрузки демона, а также применения новых конфигов, всегда использовались системные средства, как service nginx reload/restart/stop или /etc/init.d/nginx reload/restart/stop. В CentOS 7, например, стоит использовать systemctl. И только недавно я случайным образом попал на статью &lt;a href=&quot;http://nginx.org/ru/docs/beginners_guide.html&quot;&gt;Руководство для начинающих&lt;/a&gt;, которая раскрывает простой секрет. &lt;/p&gt;

&lt;p&gt;При установке/настройке/правке конфигов веб-сервера Nginx, приходится очень часто выполнять команду reload, напомню, что это одна из маленьких фишичек данного веб-сервера, «мягкое» применение конфигов без перезагрузки, так вот, некоторыми днями, я использую service nginx reload 100 раз, а может и больше. Но сегодня, пришло решение:&lt;/p&gt;
&lt;pre&gt;nginx –s reload&lt;/pre&gt;
&lt;p&gt;Ошибиться в двух словах сложнее чем в трех, или, например, при наборе &lt;/p&gt;
&lt;pre&gt;systemctl restart nginx.service &lt;/pre&gt;
&lt;p&gt;И при этом данная конструкция универсальна для всех ОС, так как функциональность предоставляется самими веб-сервером. 
В общем-то:&lt;br /&gt;
&lt;br /&gt;
&lt;i&gt;Когда Nginx запущен, им можно управлять, вызывая исполняемый файл с параметром -s. Используйте следующий синтаксис:&lt;/i&gt;&lt;/p&gt;

&lt;pre&gt;nginx -s сигнал&lt;/pre&gt;
&lt;p&gt;&lt;i&gt;Где сигнал может быть одним их нижеследующего:&lt;/i&gt;&lt;/p&gt;
&lt;pre&gt;
stop — быстрое завершение
quit — плавное завершение
reload — перезагрузка конфигурационного файла
reopen — переоткрытие лог-файлов
&lt;/pre&gt;
&lt;p&gt;&amp;lt;/i&amp;gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;/primienieniie-novykh-konfighov-nginx/&quot;&gt;Применение новых конфигов Nginx&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on November 26, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Смена логотипа в Redmine]]></title>
  <link rel="alternate" type="text/html" href="/smena-logotipa-v-redmine/" />
  <id>/smena-logotipa-v-redmine</id>
  <published>2014-11-05T00:00:00+03:00</published>
  <updated>2014-11-05T00:00:00+03:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;Решил для себя перевести статью по &lt;a href=&quot;http://www.redmine.org/projects/redmine/wiki/Howto_add_a_logo_to_your_Redmine_banner&quot; target=&quot;_blank&quot;&gt;добавлению логотипа в заголовок Redmine&lt;/a&gt;. В моем случае проверялось на теме Alternate.&lt;br /&gt;
Редактируем файлик base.html.erb&lt;br /&gt;
Например&lt;/p&gt;

&lt;pre&gt;# vim /opt/redmine/app/views/layouts/base.html.erb&lt;/pre&gt;

&lt;p&gt;Находим строку&lt;/p&gt;

&lt;pre&gt;&amp;lt;h1&amp;gt;&amp;lt;%= page_header_title %&amp;gt;&amp;lt;/h1&amp;gt;&lt;/pre&gt;

&lt;!--more--&gt;
&lt;p&gt;И комментируем&lt;/p&gt;

&lt;pre&gt;&amp;lt;!--&amp;lt;h1&amp;gt;&amp;lt;%= page_header_title %&amp;gt;&amp;lt;/h1&amp;gt;--&amp;gt;
&lt;/pre&gt;

&lt;p&gt;В следующую строчку вставляем&lt;/p&gt;

&lt;pre&gt;&amp;lt;img src=&quot;&amp;lt;%= Redmine::Utils.relative_url_root %&amp;gt;/images/logo.png&quot; style=&quot;top-margin: 15px; left-margin: 15px;&quot;/&amp;gt;&lt;/pre&gt;

&lt;p&gt;&amp;lt;%= Redmine::Utils.relative_url_root %&amp;gt; — переменная, которая указывает на каталог установки redmine.&lt;br /&gt;
В итоге, правки должны выглядеть вот так&lt;/p&gt;

&lt;pre&gt;&amp;lt;/div&amp;gt;
&amp;lt;!--&amp;lt;h1&amp;gt;&amp;lt;%= page_header_title %&amp;gt;&amp;lt;/h1&amp;gt;--&amp;gt;
&amp;lt;img src=&quot;&amp;lt;%= Redmine::Utils.relative_url_root %&amp;gt;/images/logo.png&quot; style=&quot;top-margin: 15px; left-margin: 15px;&quot;/&amp;gt;

&amp;lt;% if display_main_menu?(@project) %&amp;gt;&lt;/pre&gt;

&lt;p&gt;Теперь нужно загрузить изображение&lt;/p&gt;

&lt;pre&gt;scp logo.png root@example.com:/opt/redmine/public/images&lt;/pre&gt;

&lt;p&gt;Не забываем выставить права на файл&lt;/p&gt;

&lt;pre&gt;chown redmine:redmine /opt/redmine/public/images/logo.png&lt;/pre&gt;

&lt;p&gt;Ну и теперь осталось перезагрузить redmine, для этого перезагружаем веб-сервер:&lt;/p&gt;

&lt;pre&gt;# service apache2 restart
# service httpd restart
# service nginx restart
&lt;/pre&gt;

&lt;p&gt;Только в статье не указано, что изображение ни как не будет деформировано, т.е. если загрузить 100х100 будет отображаться 100х100, если 1024х1024 будет такое и сдвинет все остальные элементы. Еще, при редактировании фирменного логотипа, я сделал прозрачный фон, чтобы не пытаться попасть в цвет шапки redmine.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/smena-logotipa-v-redmine/&quot;&gt;Смена логотипа в Redmine&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on November 05, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Сброс пароля суперпользователя в linux]]></title>
  <link rel="alternate" type="text/html" href="/sbros-parolya-superpol-zovatelya-v-linux/" />
  <id>/sbros-parolya-superpol-zovatelya-v-linux</id>
  <published>2014-10-16T00:00:00+04:00</published>
  <updated>2014-10-16T00:00:00+04:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;&lt;a href=&quot;http://doam.ru/wp-content/uploads/2014/10/root.png&quot; rel=&quot;lightbox[981]&quot; title=&quot;root&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-983&quot; src=&quot;http://doam.ru/wp-content/uploads/2014/10/root.png&quot; alt=&quot;root&quot; width=&quot;800&quot; height=&quot;480&quot; /&gt;&lt;/a&gt;Сейчас для меня актуальна тема самостоятельной подготовки к сдаче RHCSA/RHCE, поэтому в моем браузере открыты несколько вкладок на эту тему. Дабы отсеять ненужное, решил написать заметку.&lt;/p&gt;

&lt;p&gt;Есть вот такая &lt;a href=&quot;http://open-os.ru/zabyl-parol-ot-root/&quot; target=&quot;_blank&quot;&gt;ссылка &lt;/a&gt;, и решение, которое приводится там, мне не знакомо. Я попробовал его на Fedora 20 и не получилось. Поэтому в рамках новой рубрики «Самостоятельная подготовка к RHCE», первая статья.&lt;/p&gt;

&lt;p&gt;Для сброса рутового пароля, необходимо:&lt;/p&gt;

&lt;!--more--&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;в grub выбрать нашу загрузочную запись, нажать «e» (открыть на редактирование)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;в конце строки с загрузкой ядра добавить&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;init=/bin/sh&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;запустить загрузку, клавишами Ctrl+x или F10 (или другими если они описаны в меню).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;дальше можно пробовать выполнить&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;# passwd root&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;если встречаете ошибку&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;passwd: Authentication token manipulation error&lt;/pre&gt;

&lt;p&gt;стоит попробовать:&lt;/p&gt;

&lt;pre&gt;mount -rw -o remount /&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;снова пробуем выполнить&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;# passwd root&lt;/pre&gt;

&lt;p&gt;Я еще не сталкивался с тем, чтобы эта схема не сработала.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/sbros-parolya-superpol-zovatelya-v-linux/&quot;&gt;Сброс пароля суперпользователя в linux&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on October 16, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Резервное копирование в NFS хранилище в Proxmox]]></title>
  <link rel="alternate" type="text/html" href="/rezervnoe-kopirovanie-v-nfs-hranilishhe-v-proxmox/" />
  <id>/rezervnoe-kopirovanie-v-nfs-hranilishhe-v-proxmox</id>
  <published>2014-10-16T00:00:00+04:00</published>
  <updated>2014-10-16T00:00:00+04:00</updated>
  <author>
    <name>Антон Рябов</name>
    <uri></uri>
    <email>mail@doam.ru</email>
  </author>
  <content type="html">
    &lt;p&gt;На работе решили использовать NFS сервер для резервных копий в Рroxmox. Думаю, стоит накидать заметку, чтобы не искать в следующий раз.&lt;br /&gt;
Чтобы nfs заработал в контейнере openvz, нужно чтобы в гипервизоре была поддержка nfs, т.е. установлен nfs-utils. В образе с Proxmox этот пакет установлен, если вы устанавливали гипервизор самостоятельно, то его, скорее всего, не будет.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a class=&quot;spoiler-tgl&quot; href=&quot;https://doam.ru/rezervnoe-kopirovanie-v-nfs-hranilishhe-v-proxmox/#SID975_1_tgl&quot; id=&quot;SID975_1_tgl&quot; rev=&quot;blind||Показать »||Скрыть «||300&quot;&gt;Показать »&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;SID975_1&quot; class=&quot;spoiler-body&quot;&gt;
  &lt;p&gt;
    Kernel NFS server&lt;br /&gt; Kernel-space NFS server is supported by latest RHEL5 and RHEL6 based kernels and since vzctl-3.0.24.&lt;br /&gt; NB! Currently only NFSv3 is supported &amp;#8212; no NFSv4 support yet.&lt;br /&gt; Prerequisites&lt;br /&gt; In order to run an NFS server inside a container, make sure:&lt;br /&gt; nfsd kernel module is loaded on host system before starting a container&lt;br /&gt; nfsd feature for a container is turned on (vzctl set $CTID &amp;#8212;feature nfsd:on &amp;#8212;save)
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Установим nfs&lt;/p&gt;

&lt;pre&gt;# yum install nfs-utils nfs-utils-lib&lt;/pre&gt;

&lt;p&gt;Запускаем демон rpcbind&lt;/p&gt;

&lt;pre&gt;# chkconfig rpcbind on &amp;amp;&amp;amp; service rpcbind start&lt;/pre&gt;

&lt;p&gt;Настраиваем nfs&lt;/p&gt;

&lt;pre&gt;# vim /etc/sysconfig/nfs&lt;/pre&gt;

&lt;p&gt;Раскомментируем следующие строки&lt;/p&gt;

&lt;pre&gt;MOUNTD_NFS_V3=&quot;yes&quot;
RPCNFSDARGS=&quot;-N 4&quot;
NFSD_MODULE=&quot;noload&quot;
&lt;/pre&gt;

&lt;p&gt;Добавим следующие строки&lt;/p&gt;

&lt;pre&gt;LOCKD_TCPPORT=32803
LOCKD_UDPPORT=32769
MOUNTD_PORT=892
RQUOTAD_PORT=875
STATD_PORT=662
STATD_OUTGOING_PORT=2020
&lt;/pre&gt;

&lt;p&gt;Стартуем сервис nfs&lt;/p&gt;

&lt;pre&gt;# chkconfig nfs on &amp;amp;&amp;amp; service nfs start
&lt;/pre&gt;

&lt;p&gt;Iptables&lt;br /&gt;
Генерируем файл правил&lt;/p&gt;

&lt;pre&gt;# iptables-save
&lt;/pre&gt;

&lt;p&gt;Правим файл в соответствии с&lt;/p&gt;

&lt;pre&gt;# Generated by iptables-save v1.4.7 on Mon Oct  6 02:58:25 2014
*filter
:INPUT DROP [6251:6489925]
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p udp --dport 111 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 111 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 2049 -j ACCEPT 
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 32803 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p udp --dport 32769 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 892 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p udp --dport 892 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 875 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p udp --dport 875 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p tcp --dport 662 -j ACCEPT
-A INPUT -s 192.168.0.0/24 -m state --state NEW -p udp --dport 662 -j ACCEPT
-A INPUT -m state --state NEW -p tcp --dport 22 -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [3092:284379]
COMMIT
# Completed on Mon Oct  6 02:58:25 2014
# Generated by iptables-save v1.4.7 on Mon Oct  6 02:58:25 2014
*mangle
:PREROUTING ACCEPT [6251:6489925]
:INPUT ACCEPT [6251:6489925]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [3092:284379]
:POSTROUTING ACCEPT [3092:284379]
COMMIT
# Completed on Mon Oct  6 02:58:25 2014
# Generated by iptables-save v1.4.7 on Mon Oct  6 02:58:25 2014
*nat
:PREROUTING ACCEPT [10:449]
:POSTROUTING ACCEPT [217:15513]
:OUTPUT ACCEPT [217:15513]
COMMIT
# Completed on Mon Oct  6 02:58:25 2014
&lt;/pre&gt;

&lt;p&gt;Применяем новые правила&lt;/p&gt;

&lt;pre&gt;# service iptables restart
&lt;/pre&gt;

&lt;p&gt;Ссылки:&lt;br /&gt;
Подробности читаем &lt;a href=&quot;http://openvz.org/NFS_server_inside_container&quot; target=&quot;_blank&quot;&gt;здесь&lt;/a&gt;&lt;br /&gt;
Сам nfs я устанавливал по &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nfs-mount-on-centos-6&quot; target=&quot;_blank&quot;&gt;этой инструкции&lt;/a&gt;&lt;br /&gt;
Не нашел изначальную статью по iptables по которой делал, но &lt;a href=&quot;http://mcdee.com.au/tutorial-configure-iptables-for-nfs-server-on-centos-6/&quot; target=&quot;_blank&quot;&gt;эта тоже ничего &lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/rezervnoe-kopirovanie-v-nfs-hranilishhe-v-proxmox/&quot;&gt;Резервное копирование в NFS хранилище в Proxmox&lt;/a&gt; was originally published by Антон Рябов at &lt;a href=&quot;&quot;&gt;Diary of madman&lt;/a&gt; on October 16, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>
